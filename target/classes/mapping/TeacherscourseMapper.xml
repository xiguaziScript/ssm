<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.exam.ssm.dao.TeacherscourseDao">
  <resultMap id="BaseResultMap" type="com.exam.ssm.model.Teacherscourse">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 10 11:07:17 CST 2018.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="TID" jdbcType="INTEGER" property="tid" />
    <result column="courseid" jdbcType="CHAR" property="courseid" />
    <result column="coursename" jdbcType="CHAR" property="coursename" />
    <result column="times" jdbcType="CHAR" property="times" />
    <result column="weeks" jdbcType="CHAR" property="weeks" />
    <result column="nodes" jdbcType="CHAR" property="nodes" />
    <result column="classlocationnum" jdbcType="CHAR" property="classlocationnum" />
    <result column="classid" jdbcType="INTEGER" property="classid" />
  </resultMap>
  <sql id="Base_Column_List">

    id, TID, courseid, coursename, times, weeks, nodes, classlocationnum, classid
  </sql>
  <select id="getTeacherscoursebytid" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 10 11:07:17 CST 2018.
    -->
    select 
    <include refid="Base_Column_List" />
    from teacherscourse
    where TID = #{tid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">

    delete from teacherscourse
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.exam.ssm.model.Teacherscourse">

    insert into teacherscourse (id, TID, courseid, 
      coursename, times, weeks, nodes, 
      classlocationnum, classid)
    values (#{id,jdbcType=INTEGER}, #{tid,jdbcType=INTEGER}, #{courseid,jdbcType=CHAR}, 
      #{coursename,jdbcType=CHAR}, #{times,jdbcType=CHAR}, #{weeks,jdbcType=CHAR}, #{nodes,jdbcType=CHAR}, 
      #{classlocationnum,jdbcType=CHAR}, #{classid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.exam.ssm.model.Teacherscourse">

    insert into teacherscourse
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="tid != null">
        TID,
      </if>
      <if test="courseid != null">
        courseid,
      </if>
      <if test="coursename != null">
        coursename,
      </if>
      <if test="times != null">
        times,
      </if>
      <if test="weeks != null">
        weeks,
      </if>
      <if test="nodes != null">
        nodes,
      </if>
      <if test="classlocationnum != null">
        classlocationnum,
      </if>
      <if test="classid != null">
        classid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="tid != null">
        #{tid,jdbcType=INTEGER},
      </if>
      <if test="courseid != null">
        #{courseid,jdbcType=CHAR},
      </if>
      <if test="coursename != null">
        #{coursename,jdbcType=CHAR},
      </if>
      <if test="times != null">
        #{times,jdbcType=CHAR},
      </if>
      <if test="weeks != null">
        #{weeks,jdbcType=CHAR},
      </if>
      <if test="nodes != null">
        #{nodes,jdbcType=CHAR},
      </if>
      <if test="classlocationnum != null">
        #{classlocationnum,jdbcType=CHAR},
      </if>
      <if test="classid != null">
        #{classid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.exam.ssm.model.Teacherscourse">

    update teacherscourse
    <set>
      <if test="tid != null">
        TID = #{tid,jdbcType=INTEGER},
      </if>
      <if test="courseid != null">
        courseid = #{courseid,jdbcType=CHAR},
      </if>
      <if test="coursename != null">
        coursename = #{coursename,jdbcType=CHAR},
      </if>
      <if test="times != null">
        times = #{times,jdbcType=CHAR},
      </if>
      <if test="weeks != null">
        weeks = #{weeks,jdbcType=CHAR},
      </if>
      <if test="nodes != null">
        nodes = #{nodes,jdbcType=CHAR},
      </if>
      <if test="classlocationnum != null">
        classlocationnum = #{classlocationnum,jdbcType=CHAR},
      </if>
      <if test="classid != null">
        classid = #{classid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.exam.ssm.model.Teacherscourse">

    update teacherscourse
    set TID = #{tid,jdbcType=INTEGER},
      courseid = #{courseid,jdbcType=CHAR},
      coursename = #{coursename,jdbcType=CHAR},
      times = #{times,jdbcType=CHAR},
      weeks = #{weeks,jdbcType=CHAR},
      nodes = #{nodes,jdbcType=CHAR},
      classlocationnum = #{classlocationnum,jdbcType=CHAR},
      classid = #{classid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>